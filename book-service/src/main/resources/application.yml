server:
  port: 8100
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
resilience4j:
  retry:
    instances:
      default:
        max-attempts: 5
      foo-bar:
        max-attempts: 7
        wait-duration: 1s # espera 1 segundo antes de tentar a nova requisição
        enable-exponential-backoff: true # a duração da espera vai aumentando
  ratelimiter:
    instances:
      default:
        limit-for-period: 2 # qnts requisições pode fazer em um período
        limit-refresh-period: 10s  # duração do período
  bulkhead:
    instances:
      default:
        max-concurrent-calls: 10 # determina qnts execuções concorrentes pode ter
spring:
  application:
    name: book-service
  jackson:
    default-property-inclusion: NON_NULL # ignora propriedades nulas
    serialization:
      fail-on-empty-beans: false # n�o falha qnd o valor estiver vazio
  datasource:
    driverClassName: org.postgresql.Driver
    platform: postgres
    url: jdbc:postgresql://localhost:5432/book-service
    username: postgres
    password: postgres
  jpa:
    show-sql: true
  flyway:
    datasources:
      default:
        enabled: true
        clean-schema: true # faz o create-drop
springdoc:
  show-actuator: true
  api-docs:
    path: book-service/v3/api-docs

